{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,aAE/BC,iBAAiB,UAItB,SAAkBC,GAChBA,EAAIC,iBAKN,SAAoBD,GACD,IAAIE,SAASF,EAAIG,eACzBC,SAAQ,SAACC,EAAOC,GACvBC,EAAOD,IAAQD,C,IAPjBG,CAAWR,GAWb,WACE,IAAK,IAAIS,EAAI,EAAGA,GAAKF,EAAOG,OAAQD,GAAK,EACvCE,EAAcF,EAAGF,EAAOK,OACrBC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUH,EAAKE,EAALF,MACjBjB,EAAAqB,OAAOC,QAAQ,qBAAoCC,OAAfH,EAAS,QAAYG,OAANN,EAAM,M,IAE1DO,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUH,EAAKE,EAALF,MAClBjB,EAAAqB,OAAOI,QAAQ,oBAAmCF,OAAfH,EAAS,QAAYG,OAANN,EAAM,M,IAE5DL,EAAOK,OAASL,EAAOc,I,CAnBzBC,E,IALF,IAAMf,EAAS,GA4Bf,SAASI,EAAcI,EAAUH,GAC/B,IAAMW,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEZ,WAAUH,UAEpBgB,EAAO,CAAEb,WAAUH,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form.form');\n\nform.addEventListener('submit', onSubmit);\n\nconst params = {};\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  makeParams(evt);\n  createPromisesChain();\n}\n\nfunction makeParams(evt) {\n  const formData = new FormData(evt.currentTarget);\n  formData.forEach((value, key) => {\n    params[key] = +value;\n  });\n}\n\nfunction createPromisesChain() {\n  for (let i = 1; i <= params.amount; i += 1) {\n    createPromise(i, params.delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    params.delay += params.step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","FormData","currentTarget","forEach","value","key","$ce04d3a99e08e73b$var$params","$ce04d3a99e08e73b$var$makeParams","i","amount","$ce04d3a99e08e73b$var$createPromise","delay","then","param","position","Notify","success","concat","catch","failure","step","$ce04d3a99e08e73b$var$createPromisesChain","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.649228b1.js.map"}